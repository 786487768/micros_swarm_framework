//******************************************************************
// 
//  Generated by IDL to C++ Translator
//  
//  File name: MSFPPacketDcps.cpp
//  Source: gencxx/MSFPPacketDcps.idl
//  Generated: Tue May 16 13:43:48 2017
//  OpenSplice V6.4.140407OSS
//  
//******************************************************************

#include "opensplice_dds_comm/MSFPPacketDcps.h"

#if DDS_USE_EXPLICIT_TEMPLATES
template class DDS_DCPSUVLSeq < opensplice_dds_comm::MSFPPacket, struct MSFPPacketSeq_uniq_>;
#endif

const char * opensplice_dds_comm::MSFPPacketTypeSupportInterface::_local_id = "IDL:opensplice_dds_comm/MSFPPacketTypeSupportInterface:1.0";

opensplice_dds_comm::MSFPPacketTypeSupportInterface_ptr opensplice_dds_comm::MSFPPacketTypeSupportInterface::_duplicate (opensplice_dds_comm::MSFPPacketTypeSupportInterface_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean opensplice_dds_comm::MSFPPacketTypeSupportInterface::_local_is_a (const char * _id)
{
   if (strcmp (_id, opensplice_dds_comm::MSFPPacketTypeSupportInterface::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::TypeSupport NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

opensplice_dds_comm::MSFPPacketTypeSupportInterface_ptr opensplice_dds_comm::MSFPPacketTypeSupportInterface::_narrow (DDS::Object_ptr p)
{
   opensplice_dds_comm::MSFPPacketTypeSupportInterface_ptr result = NULL;
   if (p && p->_is_a (opensplice_dds_comm::MSFPPacketTypeSupportInterface::_local_id))
   {
      result = dynamic_cast < opensplice_dds_comm::MSFPPacketTypeSupportInterface_ptr> (p);
      if (result) result->m_count++;
   }
   return result;
}

opensplice_dds_comm::MSFPPacketTypeSupportInterface_ptr opensplice_dds_comm::MSFPPacketTypeSupportInterface::_unchecked_narrow (DDS::Object_ptr p)
{
   opensplice_dds_comm::MSFPPacketTypeSupportInterface_ptr result;
   result = dynamic_cast < opensplice_dds_comm::MSFPPacketTypeSupportInterface_ptr> (p);
   if (result) result->m_count++;
   return result;
}

const char * opensplice_dds_comm::MSFPPacketDataWriter::_local_id = "IDL:opensplice_dds_comm/MSFPPacketDataWriter:1.0";

opensplice_dds_comm::MSFPPacketDataWriter_ptr opensplice_dds_comm::MSFPPacketDataWriter::_duplicate (opensplice_dds_comm::MSFPPacketDataWriter_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean opensplice_dds_comm::MSFPPacketDataWriter::_local_is_a (const char * _id)
{
   if (strcmp (_id, opensplice_dds_comm::MSFPPacketDataWriter::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::DataWriter NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

opensplice_dds_comm::MSFPPacketDataWriter_ptr opensplice_dds_comm::MSFPPacketDataWriter::_narrow (DDS::Object_ptr p)
{
   opensplice_dds_comm::MSFPPacketDataWriter_ptr result = NULL;
   if (p && p->_is_a (opensplice_dds_comm::MSFPPacketDataWriter::_local_id))
   {
      result = dynamic_cast < opensplice_dds_comm::MSFPPacketDataWriter_ptr> (p);
      if (result) result->m_count++;
   }
   return result;
}

opensplice_dds_comm::MSFPPacketDataWriter_ptr opensplice_dds_comm::MSFPPacketDataWriter::_unchecked_narrow (DDS::Object_ptr p)
{
   opensplice_dds_comm::MSFPPacketDataWriter_ptr result;
   result = dynamic_cast < opensplice_dds_comm::MSFPPacketDataWriter_ptr> (p);
   if (result) result->m_count++;
   return result;
}

const char * opensplice_dds_comm::MSFPPacketDataReader::_local_id = "IDL:opensplice_dds_comm/MSFPPacketDataReader:1.0";

opensplice_dds_comm::MSFPPacketDataReader_ptr opensplice_dds_comm::MSFPPacketDataReader::_duplicate (opensplice_dds_comm::MSFPPacketDataReader_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean opensplice_dds_comm::MSFPPacketDataReader::_local_is_a (const char * _id)
{
   if (strcmp (_id, opensplice_dds_comm::MSFPPacketDataReader::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::DataReader NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

opensplice_dds_comm::MSFPPacketDataReader_ptr opensplice_dds_comm::MSFPPacketDataReader::_narrow (DDS::Object_ptr p)
{
   opensplice_dds_comm::MSFPPacketDataReader_ptr result = NULL;
   if (p && p->_is_a (opensplice_dds_comm::MSFPPacketDataReader::_local_id))
   {
      result = dynamic_cast < opensplice_dds_comm::MSFPPacketDataReader_ptr> (p);
      if (result) result->m_count++;
   }
   return result;
}

opensplice_dds_comm::MSFPPacketDataReader_ptr opensplice_dds_comm::MSFPPacketDataReader::_unchecked_narrow (DDS::Object_ptr p)
{
   opensplice_dds_comm::MSFPPacketDataReader_ptr result;
   result = dynamic_cast < opensplice_dds_comm::MSFPPacketDataReader_ptr> (p);
   if (result) result->m_count++;
   return result;
}

const char * opensplice_dds_comm::MSFPPacketDataReaderView::_local_id = "IDL:opensplice_dds_comm/MSFPPacketDataReaderView:1.0";

opensplice_dds_comm::MSFPPacketDataReaderView_ptr opensplice_dds_comm::MSFPPacketDataReaderView::_duplicate (opensplice_dds_comm::MSFPPacketDataReaderView_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean opensplice_dds_comm::MSFPPacketDataReaderView::_local_is_a (const char * _id)
{
   if (strcmp (_id, opensplice_dds_comm::MSFPPacketDataReaderView::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::DataReaderView NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

opensplice_dds_comm::MSFPPacketDataReaderView_ptr opensplice_dds_comm::MSFPPacketDataReaderView::_narrow (DDS::Object_ptr p)
{
   opensplice_dds_comm::MSFPPacketDataReaderView_ptr result = NULL;
   if (p && p->_is_a (opensplice_dds_comm::MSFPPacketDataReaderView::_local_id))
   {
      result = dynamic_cast < opensplice_dds_comm::MSFPPacketDataReaderView_ptr> (p);
      if (result) result->m_count++;
   }
   return result;
}

opensplice_dds_comm::MSFPPacketDataReaderView_ptr opensplice_dds_comm::MSFPPacketDataReaderView::_unchecked_narrow (DDS::Object_ptr p)
{
   opensplice_dds_comm::MSFPPacketDataReaderView_ptr result;
   result = dynamic_cast < opensplice_dds_comm::MSFPPacketDataReaderView_ptr> (p);
   if (result) result->m_count++;
   return result;
}



